FORMAT: 1A
HOST: http://polls.apiblueprint.org/

# Petitions API

Petitions API allows users to create and sign petitions.

# Group User

## List all users [/users{?per_page,page}]
+ Parameters
    + per_page (number, optional) - Number of records to show per request.
        - Default: `20`
    + page (number, optional) - Current page number.
        - Default: `1`

### List All Users [GET]
+ Response 200 (application/json)
    + Attributes
        - total: `200` (number) - Total number of records,
        - per_page: `20` (number) - Number of records per request,
        - current_page: `2` (number) - Current page number,
        - last_page: `10` (number) - Last page number,
        - next_page_url: `/users/?page=3` (string) - Resource URL to access next page,
        - prev_page_url: `/users/?page=1` (string) - Resource URL to access previous page,
        - from: `21` (number) - First record's number,
        - to: `40` (number) - Last record's number,
        - data (array[User Public]) - Array of user objects
        
## Search Users [/user/search{filter}{?per_page,page}]
+ Parameters
    + filter (string, required) - Search string.
    + per_page (number, optional) - Number of records to show per request.
        - Default: `20`
    + page (number, optional) - Current page number.
        - Default: `1`

### Search Users [GET]
+ Response 200 (application/json)
    + Attributes
        - total: `200` (number) - Total number of records,
        - per_page: `20` (number) - Number of records per request,
        - current_page: `2` (number) - Current page number,
        - last_page: `10` (number) - Last page number,
        - next_page_url: `/users/?page=3` (string) - Resource URL to access next page,
        - prev_page_url: `/users/?page=1` (string) - Resource URL to access previous page,
        - from: `21` (number) - First record's number,
        - to: `40` (number) - Last record's number,
        - data (array[User Public]) - Array of user objects

## Create a user [/users]

### Create a New User [POST]

You may create a new user.
+ Request (application/json)
+ Attributes
    + email: `user@domain.com` (string, required) - Email id.
    + first_name: `Jane` (string, required) - First name.
    + last_name: `Doe` (string, required) - Last name.
    + password: `pass1234` (string, required) - Password.
    + password_confirmation: `pass1234` (string, required) - Password confirmation.
    
+ Response 201 (application/json)

    + Headers

            Location: /users/2

    + Attributes (User Public)
        
## Select a user [/users/{id}]

+ Parameters
    + id: `1` (number, required) - Id of a user.

### Show a user [GET]

Get the details of a user

+ Response 200 (application/json)
    + Attributes (User Public)

## Select active user [/users/me]

### Show details [GET]

Get the details of the active user.

+ Response 200 (application/json)
    + Attributes (User)

### Update details [PUT]

Update the details of the active user.

+ Request (application/json)
+ Attributes (User Fillable)
    
+ Response 203 (application/json)
    + Attributes (User)
    
## Update active user's password [/users/me/password]

### Update password [PUT]

Update the password of active user.

+ Request (application/json)
+ Attributes
    + current_password: `pass1234` (string, required) - Current password.
    + password: `pass6789` (string, required) - New password.
    + password_confirmation: `pass6789` (string, required) - Password confirmation.

+ Response 200 (application/json)
    + Attributes
        + success: `true` (boolean) - Status.
        + message: `Password changed` (string) - Message.
+ Response 400 (application/json)
    + Attributes
        + success: `false` (boolean) - Status.
        + message: `Wrong current password.` (string) - Message.
        
## List/search organizations [/users/me/organizations{?filter,per_page,page}]
+ Parameters
    + filter: (string, optional) - Search string.
    + per_page: `20` (number, optional) - Number of records to show per request.
        - Default: `20`
    + page: `1` (number, optional) - Current page number.
        - Default: `1`
        
### List/search organziations [GET]

List or search organizations created by the active user.

+ Response 200 (application/json)
+ Attributes
    - total: `200` (number) - Total number of records,
    - per_page: `20` (number) - Number of records per request,
    - current_page: `2` (number) - Current page number,
    - last_page: `10` (number) - Last page number,
    - next_page_url: `/users/?page=3` (string) - Resource URL to access next page,
    - prev_page_url: `/users/?page=1` (string) - Resource URL to access previous page,
    - from: `21` (number) - First record's number,
    - to: `40` (number) - Last record's number,
    - data (array[Organization Public]) - Array of organization objects
    
## List/search memberships [/users/me/memberships{?filter,per_page,page}]
+ Parameters
    + filter: (string, optional) - Search string.
    + per_page: `20` (number, optional) - Number of records to show per request.
        - Default: `20`
    + page: `1` (number, optional) - Current page number.
        - Default: `1`
        
### List/search memberships [GET]

List or search organizations in which the active user has membership.

+ Response 200 (application/json)
+ Attributes
    - total: `200` (number) - Total number of records,
    - per_page: `20` (number) - Number of records per request,
    - current_page: `2` (number) - Current page number,
    - last_page: `10` (number) - Last page number,
    - next_page_url: `/users/?page=3` (string) - Resource URL to access next page,
    - prev_page_url: `/users/?page=1` (string) - Resource URL to access previous page,
    - from: `21` (number) - First record's number,
    - to: `40` (number) - Last record's number,
    - data (array[Organization Public]) - Array of organization objects

## List/search targets [/users/me/targets{?filter,per_page,page}]
+ Parameters
    + filter: (string, optional) - Search string.
    + per_page: `20` (number, optional) - Number of records to show per request.
        - Default: `20`
    + page: `1` (number, optional) - Current page number.
        - Default: `1`
        
### List/search targets [GET]

List/search targets accessible by the active user.

+ Response 200 (application/json)
+ Attributes
    - total: `200` (number) - Total number of records,
    - per_page: `20` (number) - Number of records per request,
    - current_page: `2` (number) - Current page number,
    - last_page: `10` (number) - Last page number,
    - next_page_url: `/users/?page=3` (string) - Resource URL to access next page,
    - prev_page_url: `/users/?page=1` (string) - Resource URL to access previous page,
    - from: `21` (number) - First record's number,
    - to: `40` (number) - Last record's number,
    - data (array[Target]) - Array of target objects
    
## List/search petitions [/users/me/petitions{?filter,per_page,page}]
+ Parameters
    + filter: (string, optional) - Search string.
    + per_page: `20` (number, optional) - Number of records to show per request.
        - Default: `20`
    + page: `1` (number, optional) - Current page number.
        - Default: `1`
        
### List/search petitions [GET]

List/search petitions created by the active user 

+ Response 200 (application/json)
+ Attributes
    - total: `200` (number) - Total number of records,
    - per_page: `20` (number) - Number of records per request,
    - current_page: `2` (number) - Current page number,
    - last_page: `10` (number) - Last page number,
    - next_page_url: `/users/?page=3` (string) - Resource URL to access next page,
    - prev_page_url: `/users/?page=1` (string) - Resource URL to access previous page,
    - from: `21` (number) - First record's number,
    - to: `40` (number) - Last record's number,
    - data (array[Petition Public]) - Array of target objects


# Group Organization

## List all organizations [/organizations{?per_page,page}]
+ Parameters
    + per_page (number, optional) - Number of records to show per request.
        - Default: `20`
    + page (number, optional) - Current page number.
        - Default: `1`

### List All Organizations [GET]
+ Response 200 (application/json)
    + Attributes
        - total: `200` (number) - Total number of records,
        - per_page: `20` (number) - Number of records per request,
        - current_page: `2` (number) - Current page number,
        - last_page: `10` (number) - Last page number,
        - next_page_url: `/users/?page=3` (string) - Resource URL to access next page,
        - prev_page_url: `/users/?page=1` (string) - Resource URL to access previous page,
        - from: `21` (number) - First record's number,
        - to: `40` (number) - Last record's number,
        - data (array[Organization Public]) - Array of user objects

## Search Organizations [/organizations/search{?filter,per_page,page}]
+ Parameters
    + filter: (string, required) - Search string.
    + per_page: `20` (number, optional) - Number of records to show per request.
        - Default: `20`
    + page: `1` (number, optional) - Current page number.
        - Default: `1`
        
### Search organizations [GET]
+ Response 200 (application/json)
    + Attributes
        - total: `200` (number) - Total number of records,
        - per_page: `20` (number) - Number of records per request,
        - current_page: `2` (number) - Current page number,
        - last_page: `10` (number) - Last page number,
        - next_page_url: `` (string) - Resource URL to access next page,
        - prev_page_url: `` (string) - Resource URL to access previous page,
        - from: `21` (number) - First record's number,
        - to: `40` (number) - Last record's number,
        - data (array[Organization Public]) - Array of user objects

## Create organization [/organizations]

### Create organization [POST]
+ Request (application/json)
+ Attributes (Organization Fillable)
    
+ Response 201 (application/json)
    + Attributes (Organization)
    
## Select an organization [/organizations/{id}]
+ Parameters
    + id: `1` (number, required) - Id of an organization.
        
### Get details [GET]
+ Response 404 (application/json)
+ Response 403 (application/json)
+ Response 200 (application/json)
    + Attributes (Organization Public)
    
### Update details [PUT]
+ Request (application/json)
+ Response 404 (application/json)
+ Response 403 (application/json)
+ Attributes (Organization Fillable)

+ Response 200 (application/json)
    + Attributes (Organization)
    
## List petitions [/organizations/{id}/petitions{?per_page,page}]
+ Parameters
    + id: `1` (number, required) - Id of an organization.
    + per_page: `20` (number) - Number of items per page.
        - Default `20`
    + page: `1` (number) - Number of items per page.
        - Default `1`

### List petitions [GET]
List the petitions created by this organization.
+ Response 404
+ response 403
+ Response 200 (application/json)
    + Attributes
        - total: `200` (number) - Total number of records,
        - per_page: `20` (number) - Number of records per request,
        - current_page: `2` (number) - Current page number,
        - last_page: `10` (number) - Last page number,
        - next_page_url: `` (string) - Resource URL to access next page,
        - prev_page_url: `` (string) - Resource URL to access previous page,
        - from: `21` (number) - First record's number,
        - to: `40` (number) - Last record's number,
        - data (array[Petition Public]) - Array of user objects

## List/search members [/organizations/{id}/petitions{?filter,per_page,page}]
+ Parameters
    + id: `1` (number, required) - Id of an organization.
    + filter: `john` (string) - Filter to search against member email.
        - Default ``
    + per_page: `20` (number) - Number of items per page.
        - Default `20`
    + page: `1` (number) - Number of items per page.
        - Default `1`

## List/search members [GET]

List or search for members in an organization.

+ Response 404
+ Response 403
+ Response 200 (application/json)
    + Attributes
        - total: `200` (number) - Total number of records,
        - per_page: `20` (number) - Number of records per request,
        - current_page: `2` (number) - Current page number,
        - last_page: `10` (number) - Last page number,
        - next_page_url: `` (string) - Resource URL to access next page,
        - prev_page_url: `` (string) - Resource URL to access previous page,
        - from: `21` (number) - First record's number,
        - to: `40` (number) - Last record's number,
        - data (array[User]) - Array of user objects

## List/search targets [/organizations/{id}/targets{?filter,per_page,page}]

+ Parameters
    + id: `1` (number, required) - Id of an organization.
    + filter: `john` (string) - Filter to search against name.
        - Default ``
    + per_page: `20` (number) - Number of items per page.
        - Default `20`
    + page: `1` (number) - Number of items per page.
        - Default `1`

## List/search targets [GET]

List or search for targets owned by an organization.

+ Response 404
+ Response 403
+ Response 200 (application/json)
    + Attributes
        - total: `200` (number) - Total number of records,
        - per_page: `20` (number) - Number of records per request,
        - current_page: `2` (number) - Current page number,
        - last_page: `10` (number) - Last page number,
        - next_page_url: `` (string) - Resource URL to access next page,
        - prev_page_url: `` (string) - Resource URL to access previous page,
        - from: `21` (number) - First record's number,
        - to: `40` (number) - Last record's number,
        - data (array[Target]) - Array of target objects  
        
# Group Petition

## Create  [/petitions]

### Create a new petition [POST]
+ Request (application/json)
+ Attributes (Petition Fillable)

+ Response 403
+ Response 201 (application/json)
    + Attributes (Petition)
    
## Select  [/petitions/{id}]

+ Parameters
    + id: (number, required) - The id of the petition.

### Show details of a petition [GET]
+ Response 404
+ Response 403
+ Response 200 (application/json)
    + Attributes (Petition)
    
### Update a petition [PUT]
+ Request (application/json)
+ Attributes (Petition Fillable)

+ Response 404
+ Response 403
+ Response 200 (application/json)
    + Attributes (Petition)
    
### Delete a petition [DELETE]
+ Response 404
+ Response 403
    + Attributes
        + message: `Error message` (string) - Error Message from server.
+ Response 203 (application/json)
    + Attributes
        + message: `Petition deleted` (string) - Message from server.
        
## Signatures [/petition/{id}/signatures{?per_page,page,start_date,end_date}]

+ Parameters
    + per_page: `20` (number, optional) - How many records to fetch
    + page: `1` (number, optional) - Current page number
    + start_date: `null` (string, optional) - Start date
    + end_date: `null` (string, optional) - End dat

### List/search signatures [GET]

List or search signatures recived for a petition.

+ Response 200 (application/json)
    + Attributes
        - total: `200` (number) - Total number of records,
        - per_page: `20` (number) - Number of records per request,
        - current_page: `2` (number) - Current page number,
        - last_page: `10` (number) - Last page number,
        - next_page_url: `` (string) - Resource URL to access next page,
        - prev_page_url: `` (string) - Resource URL to access previous page,
        - from: `21` (number) - First record's number,
        - to: `40` (number) - Last record's number,
        - data (array[Signature]) - Array of target objects  
        
# Data Structures

## User Fillable (object)

- first_name: `John` (string, required) - Firstname of the user.
- last_name: `Doex` (string, required) - Lastname of the user.
- phone: `9446387282` (string) - Phone number.
- about_me: `Lorum ipsum` (string) - Description of user.
- address_1: `1600 Pennsylvania Ave N` (string) - Address line 1.
- address_2: `Opposite The Whitehouse` (string) - Address line 2.
- city: `Washington` (string) - City.
- zipcode: `20500` (number) - Zip/Postal code.
- country_code: `USA` (string) - Country code.
- facebook_handle: `johndoe` (string) - The facebook handle of this user.
- twitter_handle: `@johndoe` (string) - The twotter handle of this user.
- locale: `en-US` (string) - Locale.
- timzone: `UTC` (string) - Timezone.
- avatar_media_id: `234` (number) - An internal id to the user's profile image resource.

## User Public (object)

- id: `2` (number, required) - The unique ID of the user.
- Include User Fillable
- created_at: `2015-01-07T14:03:43Z` (string, required) - ISO8601 date and time of when the user was created.
- updated_at: `2015-01-07T14:03:43Z` (string, required) - ISO8601 date and time of when the user was updated.
- last_seen_at: `2015-01-07T14:03:43Z` (string) - ISO8601 date and time of when the user was last active.
- verfied_at: `2015-01-07T14:03:43Z` (string) - ISO8601 date and time of when this user's email was verified.
- avatar_url: `http://api.petitions.io/images/hst352gs673.jpg` (string) - URL to the user's profile image if he has any.
- avatar_media_id: `234` (number) - An internal id to the user's profile image resource.

## User (object)

- Include User Public
- email: `john.doe@petitons.io` (string) - Email id of the user.

##Organization Fillable (object)
- name: `Organziation name` (string, required) - Name of the organziation.
- country_code: `USA` (string, required) - Three letter country code.
- mission:  (string) - Mission statement.
- address_1: (string) - Address line 1.
- address_2: (string) - Address line 2.
- state: (string) - name of state.
- city: (string) - City name.
- zipcode: (string) - Zipcode.
- website: (string) - URL to organization's website.
- twitter_handle: `` (string) - Twitter handle.

##Organization (object)
- id: (number) - Internal id.
- Include Organization Fillable
- avatar_url: `` (string) - URL to profile avatar.
- avatar_media_id: (number) - Internal avatar media id.

##Organization Public (object)
- id: (number) - Internal id.
- Include Organization Fillable
- avatar_url: `` (string) - URL to profile avatar.
- avatar_media_id: (number) - Internal avatar media id.

##Petition Fillable (object)
- title: `Petition title` (string, required) - Title of the petition.
- description: `Description` (string) - Description about the petition.
- owner_organization_id: `null` (number) - Id of the organization, if this is an organizational petition
- video_url: `https://youtube.com/<link>` (string) - A video url.
- image_media_id: `null` (number) - Internal id of the media image object.

##Petition Public (object)
- id: `` (number) - Internal id of the petition.
- Include Petition Fillable
- image_url: `` (string) - URL to the image.
- owner_user_id: `1` (number) - Id of the user who created/owns this petition.
- created_at: `2015-01-07T14:03:43Z` (string) - ISO8601 date and time of when the petition was created
- updated_at: `2015-01-07T14:03:43Z` (string) - ISO8601 date and time of when the petition was last updated.
- published_at: `2015-01-07T14:03:43Z` (string) - ISO8601 date and time of when the petition was published.

##Petition (object)
- Include Petition Public
- status: draft (enum, default) - The status of the petition.
    - draft (string)
    - published (string)
    
##Target Fillable (object)
- name: (string, required) - Name of target.
- type: other(enum, default) - Type of target.
    - government (string)
    - organization (string)
    - company (string)
    - other (string)
- country_code: `USA` (string) - Three letter country code.
- state: `` (string) - State.
- city: `` (string) - City.
- avatar_media_id: `null` (number) - Internal id to avatar media object.
- owner_organization_id: `null` (number) - Id of the organization who owns this resource. 

##Target (object)
- id: (number) - Internal id.
- Include Target Fillable
- owner_user_id: `` (number) - The id of the user who created/owns this target.
- avatar_url: `` (string) - URL to the avatar image.
- created_at: `2015-01-07T14:03:43Z` (string) - ISO8601 date and time of when the target was created
- updated_at: `2015-01-07T14:03:43Z` (string) - ISO8601 date and time of when the target was last updated.

##Signature Fillable (object)
- email: (string, required) - The email of the signer.
- is_visible: `false` (boolean, required) - Is this signature visible to the public.
- first_name: `` (string) - First name of the signer.
- last_name: `` (string) - last name of the signer.
- comment: `` (string) - Comment.
- address_1: `` (string) - Address line 1.
- address_2: `` (string) - Address line 2.
- city: `` (string) - City.
- state: `` (string) - State.
- country_code: `USA` (string) - Three letter country code.
- zipcode: `` (string) - Zip code.
- locale: `en-US` (string) - Locale.
- timezone: `UTC` (string) - Timezone.
- source_ip: `` (string) - Source IP of signature.
- source_url: `` (string) - Source url.

##Signature (object)
- id: (number) - Internal id of this signature object.
- Include Signature Fillable
- created_at: `2015-01-07T14:03:43Z` (string) - ISO8601 date and time of when the target was created.
- updated_at: `2015-01-07T14:03:43Z` (string) - ISO8601 date and time of when the target was created.